t_struct    *ft_create_str(t_struct *out, va_list ap)
{
	int	realsz;
	char *convchar;
	convchar = ft_conversion(out, ap);
	realsz = ft_strlen(convchar);
	if (out->flag & DOT)
	{
		if (convchar[0] == '-' && realsz > out->width)
		{
			write(1, &convchar[0], 1);
			convchar++;
			realsz--;
		}
		realsz = realsz > out->precision ? realsz : (out->precision - realsz);
		while ((realsz--) > 0)
			convchar = ft_strjoin("0", convchar);
	}
	if (out->width)
	{
		realsz = ft_strlen(convchar);
		if (convchar[0] == '-' && realsz > out->width)
			realsz--;
		realsz = realsz > out->width ? realsz : (out->width - realsz);
		if (out->flag & MINUS)
		{
			while((realsz--) > 0)
				convchar = ft_strjoin(convchar," ");
		}
		else if (out->flag & ZERO)
		{
			if (convchar[0] == '-')
			{
				write(1, "-", 1);
				convchar++;
			}
			while((realsz--) > 0)
				convchar = ft_strjoin("0", convchar);
		}
		else
		{
			while(realsz--)
				convchar = ft_strjoin(" ", convchar);
		}
	}
	out->str = convchar;
	return(out);
}



p / c {
    flags 0 and . not supported 
}

d / u / i / x / X {
    - : put the conversion on the left side;
    0 : put 0 in front of the conversion;
    . : put 0 in front of the conversion;
    0 && - || . impossible;

    d / i {
        negativ result put the - strait left if the is flags;
    }
}

s {
    - : normal behaviour;
    . : number of octet display;
    0 : not supported;
}